spring:
  application:
    name: z-ai-agent
  datasource:
    url: jdbc:postgresql://localhost:5432/z_ai_agent
    username: postgres
    password: 123456
  ai:
    dashscope:
#      api-key: 配置成自己的
      chat:
        options:
          model: qwen-plus
    ollama:
      base-url: http://localhost:11434
      chat:
        model: gemma3:1b
    mcp:
      client:
#        # 本地，则可以使用stdio模式，并且指定mcp服务配置文件的位置
#        stdio:
#          servers-configuration: classpath:mcp-servers.json
        # 如果是远程，使用sse模式，并且指定mcp服务的地址
        sse:
          connections:
            server1:
              url: http://localhost:8127
#    vectorstore:
#      pgvector:
#        index-type: HNSW
#        dimensions: 1536
#        distance-type: COSINE_DISTANCE
#        max-document-batch-size: 10000 # Optional: Maximum number of documents per batch
#        initialize-schema: true
  profiles:
    active: local
server:
  port: 8123
  servlet:
    context-path: /api
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.ai.zaiagent.controller
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn
logging:
  level:
    org.springframework.ai.chat.client.advisor.org.springframework.ai.chat.client.advisor.MyLoggerAdvisor: debug
    org.springframework.ai: DEBUG # 修改日志级别，查看 Spring AI 更多调用细节
# searchApi https://www.searchapi.io/
#search-api:
#  api-key: your-apikey
